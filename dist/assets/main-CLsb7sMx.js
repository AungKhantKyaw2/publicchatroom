import{c as q,g as L,d as O,a as E,b as v,o as Y,q as $,e as A,w as H,T as F,f as N}from"./main-CvdBnSZr.js";import{t as g,n as b,g as T,a as R,e as U,m as I,b as y}from"./uielement-0DBnPk4o.js";/* empty css                */function z(n,s){let e=n,o=s;const t=q(v,"chats");let l=null;const u=async f=>{const a=new Date,c={username:o,room:e,message:f,created_at:F.fromDate(a)};try{return await N(t,c)}catch(i){console.log("Error addchat = ",i)}},r=f=>{l&&l(),l=Y($(t,H("room","==",e),A("created_at")),a=>{a.docChanges().forEach(c=>{if(console.log(c),c.type==="added"&&f(c.doc.data()),c.type==="removed"){const i=document.querySelector(".chat-ul");i.innerHTML=""}})})},m=f=>{e=f,console.log(`Room changed to ${e}`)},d=f=>{o=f,localStorage.setItem("username",o),console.log(localStorage),console.log(`Username Changed to ${o}`)};return(()=>{let f=setInterval(async()=>{try{const a=await L(t);if(console.log(a),a.empty){console.log("No message to delete"),clearInterval(f);return}a.forEach(async c=>{await O(E(v,"chats",c.id))}),console.log("All message delete successfully")}catch(a){console.error("Error deleting message :",a)}},1e4)})(),{addChat:u,getChats:r,updateChatroom:m,updateUsername:d}}function S(n,s){const e=+g(n)-+g(s);return e<0?-1:e>0?1:e}function j(n,s,e){const[o,t]=b(e?.in,n,s),l=o.getFullYear()-t.getFullYear(),u=o.getMonth()-t.getMonth();return l*12+u}function k(n){return s=>{const o=(n?Math[n]:Math.trunc)(s);return o===0?0:o}}function G(n,s){return+g(n)-+g(s)}function B(n,s){const e=g(n,s?.in);return e.setHours(23,59,59,999),e}function J(n,s){const e=g(n,s?.in),o=e.getMonth();return e.setFullYear(e.getFullYear(),o+1,0),e.setHours(23,59,59,999),e}function K(n,s){const e=g(n,s?.in);return+B(e,s)==+J(e,s)}function P(n,s,e){const[o,t,l]=b(e?.in,n,n,s),u=S(t,l),r=Math.abs(j(t,l));if(r<1)return 0;t.getMonth()===1&&t.getDate()>27&&t.setDate(30),t.setMonth(t.getMonth()-u*r);let m=S(t,l)===-u;K(o)&&r===1&&S(o,l)===1&&(m=!1);const d=u*(r-+m);return d===0?0:d}function Q(n,s,e){const o=G(n,s)/1e3;return k(e?.roundingMethod)(o)}function V(n,s,e){const o=R(),t=e?.locale??o.locale??U,l=2520,u=S(n,s);if(isNaN(u))throw new RangeError("Invalid time value");const r=Object.assign({},e,{addSuffix:e?.addSuffix,comparison:u}),[m,d]=b(e?.in,...u>0?[s,n]:[n,s]),h=Q(d,m),f=(T(d)-T(m))/1e3,a=Math.round((h-f)/60);let c;if(a<2)return e?.includeSeconds?h<5?t.formatDistance("lessThanXSeconds",5,r):h<10?t.formatDistance("lessThanXSeconds",10,r):h<20?t.formatDistance("lessThanXSeconds",20,r):h<40?t.formatDistance("halfAMinute",0,r):h<60?t.formatDistance("lessThanXMinutes",1,r):t.formatDistance("xMinutes",1,r):a===0?t.formatDistance("lessThanXMinutes",1,r):t.formatDistance("xMinutes",a,r);if(a<45)return t.formatDistance("xMinutes",a,r);if(a<90)return t.formatDistance("aboutXHours",1,r);if(a<I){const i=Math.round(a/60);return t.formatDistance("aboutXHours",i,r)}else{if(a<l)return t.formatDistance("xDays",1,r);if(a<y){const i=Math.round(a/I);return t.formatDistance("xDays",i,r)}else if(a<y*2)return c=Math.round(a/y),t.formatDistance("aboutXMonths",c,r)}if(c=P(d,m),c<12){const i=Math.round(a/y);return t.formatDistance("xMonths",i,r)}else{const i=c%12,x=Math.trunc(c/12);return i<3?t.formatDistance("aboutXYears",x,r):i<9?t.formatDistance("overXYears",x,r):t.formatDistance("almostXYears",x+1,r)}}function W(n){const s=o=>{const t=V(o.created_at.toDate(),new Date,{addSuffix:!0}),l=`    <li class="shadow rounded-lg px-4 py-2">
                                <div class="flex justify-between">
                                     <h5 class="text-gray-600 font-medium text-sm">${o.username}/h5>
                                     <i class="text-gray-300 text-xs">${t}</i>
                                </div>
                                <p class="text-gray-600 text-sm">${o.message}</p>
                            </li>`;n.innerHTML+=l};function e(){n.innerHTML=""}return{newli:s,clearli:e}}const Z=document.querySelector(".chatrooms"),ee=document.querySelector(".chat-ul"),w=document.querySelector(".chat-form"),D=document.querySelector(".user-form"),C=document.querySelector(".msg"),_=document.querySelector(".roomtitle"),X=localStorage.getItem("username")?localStorage.getItem("username"):"Guest";D.username.placeholder=`username is ${X}`;const M=z("general",X);_.textContent="General";const p=W(ee);console.log(p);w.addEventListener("submit",n=>{n.preventDefault();const s=w.message.value.trim();M.addChat(s).then(()=>w.reset()).catch(e=>console.log(e))});D.addEventListener("submit",n=>{n.preventDefault();const s=D.username.value.trim();M.updateUsername(s),D.reset(),C.innerText=`New name updated to ${s}`,D.username.placeholder=`username is ${s}`,setTimeout(()=>C.innerText="",3e3)});Z.addEventListener("click",n=>{n.preventDefault();const s=n.target.closest("button");if(console.log(s),s){const e=s.getAttribute("id");console.log(e);const o=s.querySelector("h3").innerText;_.textContent=o,p.clearli(),M.updateChatroom(e),M.getChats(t=>{console.log(t),p.newli(t)})}});M.getChats(n=>{console.log(n),p.newli(n)});
